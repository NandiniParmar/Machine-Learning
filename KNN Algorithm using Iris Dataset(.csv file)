import sklearn as sk
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.metrics import confusion_matrix
import pandas as pd
from sklearn.neighbors import KNeighborsClassifier

#Step 1: Load the Dataset
df = pd.read_csv("iris.csv")
print("Describe the Dataset:",df.describe())
print("Head",df.head())
print("Whole Dataset:",df)

#Step 2:Split the dataset
x = df[["sepal_length","sepal_width","petal_length","petal_width"]]
y = df[["species"]]
x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.33,random_state=42)
print("Training Features:",x_train)
print("Training Labels:",y_train)
print("Testing Features:",x_test)
print("Testing Labels:",y_test)



#Step 3: Model definition
model = KNeighborsClassifier(n_neighbors = 2, weights="distance", metric="euclidean")


#Step4: Model fit and predict
model.fit(x_train,y_train)
dataclass = model.predict(x_test)
print("Dataclass Values:",dataclass)



#Step 5: Accuracy Score and Confusion Matrix
print("Accuracy Score:",accuracy_score(y_test, dataclass, normalize = True, sample_weight = None))
print("Confusion Matrix:", confusion_matrix(y_test, dataclass))







