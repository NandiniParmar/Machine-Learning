#KNN Algorithm using Breast Cancer Dataset

#Step 1: Import the libraries
import sklearn as sk
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.metrics import confusion_matrix
import pandas as pd
from sklearn.neighbors import KNeighborsClassifier


#Step 2: Load the dataset
df = pd.read_csv("BreastCancerDataset.csv")
print("Head->",df.head())
print("Describe->",df.describe())
print("Shape->", df.shape)

#Step 3: Split the datasset
x = df[['radius_mean','texture_mean','perimeter_mean','area_mean','smoothness_mean','compactness_mean','concavity_mean','concave points_mean',
        'symmetry_mean','fractal_dimension_mean','radius_se','texture_se','perimeter_se','area_se','smoothness_se','compactness_se','concavity_se',
        'concave points_se','symmetry_se','fractal_dimension_se','radius_worst','texture_worst','perimeter_worst','area_worst','smoothness_worst',
        'compactness_worst','concavity_worst','concave points_worst','symmetry_worst','fractal_dimension_worst']]
y = df[['diagnosis']]
x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.33,random_state = 42)
print("Training Features: ",x_train)
print("Training Labels: ",y_train)
print("Testing Features: ",x_test)
print("Testing Labels: ",y_test)

#Step 4: Define the model
model = KNeighborsClassifier(n_neighbors=3, weights ='distance', metric='euclidean')

#Step 5: Model fit and predict
model.fit(x_train,y_train)  #fit on training features and labels
dataclass = model.predict(x_test)  #test on testing features
print("Dataclass->",dataclass)

#Step6: Accuracy Score and Confusion Matrix
print("Accuracy Score->",accuracy_score(y_test,dataclass,normalize = True, sample_weight = None))
print("Confusion Matrix->",confusion_matrix(y_test, dataclass))





